#!/usr/bin/env python3
import socket
import subprocess
import sys

TIMEOUT = 0.1 # in seconds

def scan_tcp_range(ip_addr, start_port, end_port):
    if check_online(ip_addr):
        for port in range(start_port, end_port):
            test_tcp_port(ip_addr, port)


def scan_udp_range(ip_addr, start_port, end_port):
    if check_online(ip_addr):
        for port in range(start_port, end_port):
            test_udp_port(ip_addr, port)


def test_tcp_port(ip_addr, port):
    tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    tcp_socket.settimeout(TIMEOUT)
    tcp_conn = tcp_socket.connect_ex((ip_addr, port))
    if tcp_conn == 0:
        print("TCP port {}: OPEN".format(port))
    tcp_socket.close()


def test_udp_port(ip_addr, port):
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    udp_socket.settimeout(TIMEOUT)
    udp_conn = udp_socket.connect_ex((ip_addr, port))
    if udp_conn == 0:
        print("UDP port {}: OPEN".format(port))
    udp_socket.close()


def check_online(ip_addr):
    try:
        online = bool(subprocess.check_call(["ping", "-c 1", ip_addr], stdout=subprocess.DEVNULL) == 0)
    except subprocess.CalledProcessError:
        online = False
    if not online:
        print("{} offline (ICMP). Ignore (y/n)? ".format(ip_addr), end="")
        if not input().lower() != "y":
            online = True
    return online


def main():
    if len(sys.argv) == 5:
        if sys.argv[1].lower() == "tcp":
            scan_tcp_range(sys.argv[2], int(sys.argv[3]), int(sys.argv[4]))
        elif sys.argv[1].lower() == "udp":
            scan_udp_range(sys.argv[2], int(sys.argv[3]), int(sys.argv[4]))
    else:
        print("usage: <tcp/udp> <IP> <START_PORT> <END_PORT>\n")

if __name__ == "__main__":
    main()
